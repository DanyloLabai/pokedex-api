openapi: 3.0.0
info:
  title: Pokedex API
  version: 1.0.0
  description: Документація до вашого API
servers:
  - url: http://localhost:3000

paths:
  /api/auth/register:
    post:
      summary: Реєстрація нового користувача
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                  example: "bob2003"
                email:
                  type: string
                  example: "bob33@gmail.com"
                password:
                  type: string
                  example: 'an34K3ldd'
      responses:
        201:
          description: Успішна реєстрація
        400:
          description: Помилка валідації


  /api/auth/login:
    post:
      summary: Логін користувача
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: "bob33@gmail.com"
                password:
                  type: string
                  example: 'an34K3ldd'
      responses:
        200:
          description: Успішний вхід
        401:
          description: Невірні дані

  /api/pokemons:
    get:
      summary: Отримати список усіх покемонів
      description: Повертає масив усіх покемонів з бази даних.
      tags:
        - Pokemons
      security:
        - bearerAuth: [] 
      responses:
        200:
          description: Список покемонів успішно отримано
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: "677fcce62d6b558c4d251d64"
                    name:
                      type: string
                      example: "venusaur"
                    type:
                      type: array
                      items:
                        type: string
                      example: ["grass", "poison"]
                    image:
                      type: string
                      example: "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/3.png"
                    createdAt:
                      type: string
                      format: date-time
                      example: "2025-04-16T15:29:42.367Z"
                    __v:
                      type: integer
                      example: 0

  /api/pokemons/{id}:
    get:
      summary: Отримати інформацію про конкретного покемона за ID
      tags: [Pokemons]
      security:
        - bearerAuth: [] 
      parameters:
        - in: path
          name: id
          required: true
          description: Унікальний ID покемона
          schema:
            type: string
      responses:
        200:
          description: Інформація про покемона успішно отримана
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                    example: "677fcce62d6b558c4d251d64"
                  name:
                    type: string
                    example: "venusaur"
                  type:
                    type: array
                    items:
                      type: string
                    example: ["grass", "poison"]
                  image:
                    type: string
                    example: "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/3.png"
                  createdAt:
                    type: string
                    format: date-time
                    example: "2025-04-16T15:29:42.367Z"
                  __v:
                    type: integer
                    example: 0
        404:
          description: Покемона з таким ID не знайдено

  /api/admin/users/:
    get:
      summary: Отримати список всіх користувачів
      description: Повертає масив усіх користувачів. Доступно лише адміністраторам.
      tags:
        - Admin
      security:
        - bearerAuth: []  
      responses:
        200:
          description: Успішно отримано список користувачів
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      example: "68138666d40d1a4fa09f7961"
                    username:
                      type: string
                      example: "adminUser"
                    email:
                      type: string
                      example: "admin@example.com"
                    role:
                      type: string
                      enum: [user, admin]
                      example: "admin"
                    pokemons:
                      type: array
                      items:
                        type: string
                      example: []
                    favorites:
                      type: array
                      items:
                        type: string
                      example: []
                    createdAt:
                      type: string
                      format: date-time
                      example: "2025-05-01T14:34:14.005Z"
        401:
          description: Токен відсутній або недійсний
        403:
          description: Доступ лише для адміністраторів
 
  
components:
  schemas:
    RegistrationRequest:
      type: object
      required:
        - username
        - email
        - password
      properties:
        username:
          type: string
          example: "bob2003"
        email:
          type: string
          example: "bob33@gmail.com"
        password:
          type: string
          example: "an34K3ldd"

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT